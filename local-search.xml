<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>关于初期建博的一些说明</title>
    <link href="/2024/01/12/%E5%85%B3%E4%BA%8E%E5%88%9D%E6%9C%9F%E5%BB%BA%E5%8D%9A%E7%9A%84%E4%B8%80%E4%BA%9B%E8%AF%B4%E6%98%8E/"/>
    <url>/2024/01/12/%E5%85%B3%E4%BA%8E%E5%88%9D%E6%9C%9F%E5%BB%BA%E5%8D%9A%E7%9A%84%E4%B8%80%E4%BA%9B%E8%AF%B4%E6%98%8E/</url>
    
    <content type="html"><![CDATA[<h1 id="关于初期建博客的一些说明"><a href="#关于初期建博客的一些说明" class="headerlink" title="关于初期建博客的一些说明"></a>关于初期建博客的一些说明</h1><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>首先要特别鸣谢<strong>Fany Full’s Blog</strong>，以及<strong>WSKH0929</strong>的教程，对我的帮助真的很大。</p><ul><li><p><a href="http://fanyfull.github.io/2021/10/16/Github-Hexo-%E7%9C%9F-%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8B%E6%90%AD%E5%BB%BA-GitHub-%E9%9D%99%E6%80%81%E5%8D%9A%E5%AE%A2/">GiHub + Hexo 真·从零开始搭建个人博客</a></p></li><li><p><a href="https://blog.csdn.net/weixin_51545953/article/details/128499341">【个人博客】Hexo个人博客搭建与配置详细教程 + Fluid主题 + Gitee发布_fluid文章页设置-CSDN博客</a></p></li></ul><blockquote><p>建站参考教程 （超级详细 真从零开始）</p></blockquote><p>其实很早之前就想建一个存放学习笔记的一个博客，之前也试过从网上找的一些博客源码放在一个虚拟主机上，实在时太麻烦了，需要域名，主机，以及维护成本。后来接触到<a href="www.github.io">GitHub</a>,了解到页面托管这个功能才让我死而复燃的心决定去搞一个自己的学习博客！</p><h2 id="前期准备工作"><a href="#前期准备工作" class="headerlink" title="前期准备工作"></a>前期准备工作</h2><ol><li><p>github 账号</p><blockquote><p> GitHub官网<a href="https://github.com/">GitHub</a></p></blockquote></li><li><p>安装Git</p><blockquote><p>Git官网<a href="https://git-scm.com/">Git (git-scm.com)</a>，国内访问会比较慢</p><p>国内镜像网站<a href="https://registry.npmmirror.com/binary.html?path=git-for-windows/">CNPM Binaries Mirror (npmmirror.com)</a></p></blockquote></li><li><p>安装Nodejs</p><blockquote><p> Node官网<a href="https://nodejs.org/en/">Node.js (nodejs.org)</a><br>在Windows上安装时务必选择全部组件，包括<code>勾选 Add to Path</code>。</p></blockquote></li><li><p>GitHub加速上网软件</p><blockquote><p> <a href="https://steampp.net/">瓦特工具箱(Steam++官网) - Watt Toolkit (steampp.net)</a> </p></blockquote><p><code>steam++在Git和PicGo上连不上GitHub，使用时要把加速关闭</code></p></li><li><p>安装PIcGo图床</p><blockquote><p> PicGo官网<a href="https://picgo.github.io/PicGo-Doc/zh/">PicGo</a></p></blockquote></li><li><p>一个markdown编辑器</p></li></ol><blockquote><p>Nodejs必须安装，可以使用cdm命令行检验是否安装成功（图为安装成功示例）</p><p><img src="https://cdn.jsdelivr.net/gh/wechatid/image/blog/202401121110565.png" alt="image-20240112110858062"></p></blockquote><h2 id="建一个Page托管的仓库"><a href="#建一个Page托管的仓库" class="headerlink" title="建一个Page托管的仓库"></a>建一个Page托管的仓库</h2><ol><li><p>登录你的GitHub账号</p></li><li><p>新建仓库，仓库名为<code>username.github.io</code>，username替换为GitHub账户的实际ID，例如：wechatid.github.io ，实际博客地址就是 <a href="https://wechatid.github.io/">https://wechatid.github.io</a> </pr></p><p><img src="https://cdn.jsdelivr.net/gh/fanlumaster/BlogMaps@master/blogs/pictures/20211016165332.png"></p><ol start="3"><li>配置页面托管</li></ol><p>​<img src="https://cdn.jsdelivr.net/gh/wechatid/image/blog/202401121255222.png" alt="image-20240112125530706"></p><blockquote><p>注意：每个用户只能开启一个pages托管</p></blockquote></li></ol><h2 id="Git配置用户信息"><a href="#Git配置用户信息" class="headerlink" title="Git配置用户信息"></a>Git配置用户信息</h2><ol><li><p>在电脑本地新建文件夹，用来存放博客的所有文件。我的是“blog”，所以下面就说的blog文件夹实际就是存放博客的文件夹。</p></li><li><p>打开blog文件夹，右击鼠标，点击<code>Git Bash here</code>，弹出命令窗口。</p></li><li><p>在窗口中输入下面两行命令</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">git config --global user.name <span class="hljs-string">&quot;user_name&quot;</span> <span class="hljs-comment"># user_name填入GitHub用户名</span><br></code></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">git config --global user.email <span class="hljs-string">&quot;user_email&quot;</span> <span class="hljs-comment"># user_email填入GitHub注册的邮箱</span><br></code></pre></td></tr></table></figure></li></ol><blockquote><p>查看或者检验Git用户信息</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">git config user.name<br></code></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">git config user.email<br></code></pre></td></tr></table></figure></blockquote><h2 id="Git-与GitHub建立ssh连接"><a href="#Git-与GitHub建立ssh连接" class="headerlink" title="Git 与GitHub建立ssh连接"></a>Git 与GitHub建立ssh连接</h2><ol><li><p>在blog文件夹内打开<code>Git Bash here</code>命令窗口，输入命令后，按三次回车，默认不设置密码。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">ssh-keygen -t rsa -C <span class="hljs-string">&quot;user.email&quot;</span> <span class="hljs-comment"># user.email 为GitHub 上注册的邮箱</span><br></code></pre></td></tr></table></figure></li><li><p>打开电脑文件夹<code>C:\Users\username\.ssh</code>,username是你的电脑账号名称。如果没有<code>.ssh</code>文件夹请点击<code>查看-显示-隐藏的项目</code>。</p></li><li><p>找到<code>id_rsa.pub</code>,用记事本打开，全选复制。</p><p>Ps：<code>id_rsa</code> 是私钥不能泄露，<code>id_rsa.pub</code> 是公钥可以放心告诉他人。</p></li><li><p>打开<a href="https://github.com/settings/ssh/new">Add new SSH key (github.com)</a>页面，新建一个SSH Keys</p><p>Title随便写，Key粘贴刚刚复制的内容。</p><p><img src="http://cdn.jsdelivr.net/gh/fanlumaster/BlogMaps@master/blogs/pictures/20211016172518.png"></p></li><li><p>使用下面命令验证是否连接成功</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">ssh -T git@github.com<br></code></pre></td></tr></table></figure><p>连接成功会提示<code>”Hi username...“</code></p><p><img src="https://cdn.jsdelivr.net/gh/fanlumaster/BlogMaps@master/blogs/pictures/20211016172942.png"></p></li></ol><h2 id="安装hexo"><a href="#安装hexo" class="headerlink" title="安装hexo"></a>安装hexo</h2><h3 id="什么是hexo"><a href="#什么是hexo" class="headerlink" title="什么是hexo"></a>什么是hexo</h3><p><code>Hexo</code> 是一个简单、快速、强大的基于 <code>Github Pages</code> 的博客框架，支持 <code>Markdown</code> 格式，有众多优秀插件和主题。</p><h3 id="Hexo原理"><a href="#Hexo原理" class="headerlink" title="Hexo原理"></a>Hexo原理</h3><p>由于 <code>Github Pages</code> 存放的都是静态文件，博客存放的不只是文章内容，还有文章列表、分类、标签、翻页等动态内容，假如每次写完一篇文章都要手动更新博文目录和相关链接信息，相信谁都会疯掉，所以 <code>Hexo</code> 所做的就是将这些 <code>md</code> 文件都放在本地，每次写完文章后调用写好的命令来批量完成相关页面的生成，然后再将有改动的页面提交到<code>github</code></p><h3 id="安装和初始化"><a href="#安装和初始化" class="headerlink" title="安装和初始化"></a>安装和初始化</h3><ol><li><p>在blog文件夹内打开<code>Git Bash here</code>命令窗口，输入命令安装<code>hexo</code></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">npm install -g hexo-cli<br></code></pre></td></tr></table></figure></li><li><p>安装完成后，输入命令进行初始化设置。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">hexo init<br></code></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/fanlumaster/BlogMaps@master/blogs/pictures/20211016174011.png"></p></li></ol><h3 id="本地渲染与预览"><a href="#本地渲染与预览" class="headerlink" title="本地渲染与预览"></a>本地渲染与预览</h3><ol><li><p>输入命令，生成静态文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">hexo g<br></code></pre></td></tr></table></figure></li><li><p>执行下面命令，开启本地预览。在浏览器中打开<code>http://localhost:4000/</code>，即可以看到初始化完成后的博客。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">hexo s<br></code></pre></td></tr></table></figure></li></ol><blockquote><p>如果本地预览出问题了，请按顺序输入命令<code>hexo g</code>,<code>hexo clean</code>,<code>hexo s</code></p></blockquote><h2 id="推送前准备"><a href="#推送前准备" class="headerlink" title="推送前准备"></a>推送前准备</h2><h3 id="配置站点文件"><a href="#配置站点文件" class="headerlink" title="配置站点文件"></a>配置站点文件</h3><p><code>hexo</code> 有 2 种 <code>_config.yml</code> 文件，一个是根目录下的全局的 <code>_config.yml</code>，一个是各个主体 <code>theme</code> 下的 <code>_config.yml</code>。将前者称为<strong>站点</strong>配置文件， 后者称为<strong>主题</strong>配置文件。</p><p>打开blog目录下站点配置文件 <code>_config.yml</code>，配置有关 <code>deploy</code> 的部分：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-comment"># Deployment</span><br><span class="hljs-comment">## Docs: https://hexo.io/docs/one-command-deployment</span><br><span class="hljs-attr">deploy:</span><br>  <span class="hljs-attr">type:</span> <span class="hljs-string">git</span><br>  <span class="hljs-attr">repo:</span> <span class="hljs-string">git@github.com:username/username.github.io.git</span><br>  <span class="hljs-attr">branch:</span> <span class="hljs-string">main</span><br></code></pre></td></tr></table></figure><p>打开仓库点击Code-SHH复制**<code>repo</code>**</p><p><code>branch</code>一般是main ，可以在仓库里面看</p><h3 id="安装部署插件"><a href="#安装部署插件" class="headerlink" title="安装部署插件"></a>安装部署插件</h3><p>在<code>Git Bash here</code>输入安装命令</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">npm install hexo-deployer-git --save <span class="hljs-comment"># 安装部署插件</span><br></code></pre></td></tr></table></figure><p>如果没有安装部署插件，<code>hexo d</code>会报错</p><p>到这里，如果不用fluid主题的话，可以直接推送到GitHub，<a href="#%E6%8E%A8%E9%80%81%E5%88%B0Github">点我跳转推送标题</a></p><h2 id="配置-fluid-主题"><a href="#配置-fluid-主题" class="headerlink" title="配置 fluid 主题"></a>配置 fluid 主题</h2><h3 id="安装Fluid主题"><a href="#安装Fluid主题" class="headerlink" title="安装Fluid主题"></a>安装Fluid主题</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">npm install --save hexo-theme-fluid<br></code></pre></td></tr></table></figure><p>然后在blog目录下创建 <code>_config.fluid.yml</code>，将<code>_config.yml</code>内容复制过去。</p><h3 id="应用fluid主题"><a href="#应用fluid主题" class="headerlink" title="应用fluid主题"></a>应用fluid主题</h3><p>修改blog目录下<code>_config.yml</code>的内容：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-attr">theme:</span> <span class="hljs-string">fluid</span>  <span class="hljs-comment"># 指定主题</span><br><br><span class="hljs-attr">language:</span> <span class="hljs-string">zh-CN</span>  <span class="hljs-comment"># 指定语言，会影响主题显示的语言，按需修改</span><br></code></pre></td></tr></table></figure><p>最好连<code>_config.fluid.yml</code>的也改了</p><h3 id="创建关于页"><a href="#创建关于页" class="headerlink" title="创建关于页"></a>创建关于页</h3><p>使用命令<code>hexo new page about</code></p><p>创建成功后修改 <code>/source/about/index.md</code>，添加 <code>layout</code> 属性。</p><p>修改后的文件示例如下：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-meta">---</span><br><span class="hljs-attr">title:</span> <span class="hljs-string">标题</span><br><span class="hljs-attr">layout:</span> <span class="hljs-string">about</span><br><span class="hljs-meta">---</span><br><span class="hljs-meta"></span><br><span class="hljs-string">这里写关于页的正文，支持</span> <span class="hljs-string">Markdown,</span> <span class="hljs-string">HTML</span><br></code></pre></td></tr></table></figure><blockquote><p><code>layout: about</code> 必须存在，并且不能修改成其他值，否则不会显示头像等样式。</p></blockquote><h2 id="推送到Github"><a href="#推送到Github" class="headerlink" title="推送到Github"></a>推送到Github</h2><p>在安装部署插件之后，如果发生修改了，需要重新渲染主题。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">hexo g<br></code></pre></td></tr></table></figure><p>推送到GitHub</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">hexo d<br></code></pre></td></tr></table></figure><h2 id="发布文章"><a href="#发布文章" class="headerlink" title="发布文章"></a>发布文章</h2><p>新建文章执行命令：<code>hexo new &quot;name&quot;</code></p><p>新建文章：打开<code>blog\source\_posts</code>目录，新建一个<strong>md</strong>类型的文件，文件名就是文章标题。</p><p>删除文章：打开<code>blog\source\_posts</code>目录，选择你要删除的文章，删除。然后重新渲染预览就删除了。</p><p>文章头部文件：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-meta">---</span><br><span class="hljs-attr">title:</span> <span class="hljs-string">关于初期建博的一些说明</span><br><span class="hljs-attr">date:</span> <span class="hljs-number">2024-01-12 09:04:49</span><br><span class="hljs-attr">tags:</span> <span class="hljs-string">博客</span><br><span class="hljs-attr">categories:</span> <span class="hljs-string">博客</span><br><span class="hljs-attr">index_img:</span> <span class="hljs-string">https://cdn.jsdelivr.net/gh/wechatid/image/blog/202401120852183.jpg</span><br><span class="hljs-attr">banner_img:</span> <span class="hljs-string">https://cdn.jsdelivr.net/gh/wechatid/image/blog/202401120852183.jpg</span><br><span class="hljs-meta">---</span><br></code></pre></td></tr></table></figure><table><thead><tr><th align="right">键</th><th align="left">值</th></tr></thead><tbody><tr><td align="right">title</td><td align="left">文章名称</td></tr><tr><td align="right">date</td><td align="left">文章发布时间</td></tr><tr><td align="right">tags</td><td align="left">标签</td></tr><tr><td align="right">categories</td><td align="left">分类</td></tr><tr><td align="right">index_img</td><td align="left">封面图</td></tr><tr><td align="right">banner_img</td><td align="left">顶部图</td></tr></tbody></table><blockquote><p>其中<code>tags</code>标签,<code>categories</code>分类都可以定义多个，如<code>[博客,学习,代码]</code></p></blockquote><blockquote><p>英文冒号后面留一个<strong>空格</strong></p></blockquote>]]></content>
    
    
    <categories>
      
      <category>博客</category>
      
    </categories>
    
    
    <tags>
      
      <tag>博客</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
